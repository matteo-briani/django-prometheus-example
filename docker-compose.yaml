version: "3"
   
services:

  dbpostgres:
    image: postgres
    volumes:
      - ./data/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres

  backenddjango:
    build: ./backenddjango/
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./backenddjango:/code
    ports:
      - 8000:8000
    depends_on:
      - dbpostgres

  alertmanager:
    image: prom/alertmanager:v0.22.2
    ports: 
      - 9093:9093
    volumes:
      - ./alertmanager:/etc/amtool/
    command: --config.file=/etc/amtool/alertmanager.yaml

  prometheus:
    image: prom/prometheus:v2.21.0
    ports:
      - 9090:9090
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus-data:/prometheus
    command: --web.enable-lifecycle  --config.file=/etc/prometheus/prometheus.yaml

  grafana:
    image: grafana/grafana:latest
    volumes:
      - ./grafana/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yaml
    ports:
      - 3000:3000
    links:
      - prometheus

  userrequests:
    image: alpine:3.14.0
    command: /bin/sh -c "while :; do printf 'GET /mytestapp/ HTTP/1.0\r\n\r\n' | nc backenddjango 8000; sleep 5; done;"

volumes:
  prometheus-data:
